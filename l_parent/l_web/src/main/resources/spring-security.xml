<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:sercurity="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- 配置不拦截的资源 -->
    <security:http pattern="/pages/login.jsp" security="none"/>
    <security:http pattern="/failer.jsp" security="none"/>
    <security:http pattern="/css/**" security="none"/>
    <security:http pattern="/images/**" security="none"/>
    <security:http pattern="/js/**" security="none"/>


    <security:http auto-config="true" use-expressions="false">
        <security:intercept-url pattern="/**" access="ROLE_S_ADMIN,ROLE_ADMIN"/>

        <!-- 定义跳转的具体的页面 -->
        <!--1、当前登录页面-->
        <!--2、登录的路径-->
        <!--3、默认路径-->
        <!--4、失败路径-->
        <!--5、登录成功后的跳转路径 -->
        <!--6、登录成功后,没有权限的跳转路径 -->
        <security:form-login
                login-page="/pages/login.jsp"
                login-processing-url="/login.do"
                default-target-url="/index.jsp"
                authentication-failure-url="/failer.jsp"
                authentication-success-forward-url="/index.jsp"
        />
        <!--authentication-failure-forward-url="/error.jsp"-->

        <!-- 关闭跨域请求 -->
        <security:csrf disabled="true"/>

        <!--配置支持iframe内置网页的使用-->
        <sercurity:headers>
            <security:frame-options policy="SAMEORIGIN"/>
        </sercurity:headers>

        <!-- 退出 -->
        <security:logout invalidate-session="true" logout-url="/logout.do" logout-success-url="/pages/login.jsp"/>

    </security:http>

    <security:authentication-manager>
        <!--认证管理器  service类  (UserDetailService 的实现类)-->
        <security:authentication-provider user-service-ref="managerService">
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
        <security:authentication-provider user-service-ref="masterService">
            <!-- 配置加密的方式 -->
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <!-- 配置加密类 -->
    <!--<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>-->
    <!--不加密-->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.password.NoOpPasswordEncoder"/>
    <!--factory-method="getInstance"/>-->

    <!--<security:global-method-security jsr250-annotations="enabled"/>-->


    <!--在使用spring：authorize 标签时，配置这个bean就不用设置角色表达式-->
    <bean id="webSecurityExpressionHandler"
          class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"/>

</beans>












